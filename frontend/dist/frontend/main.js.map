{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin.service.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.scss","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.scss","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messagearea/messagearea.component.html","webpack:///./src/app/messagearea/messagearea.component.scss","webpack:///./src/app/messagearea/messagearea.component.ts","webpack:///./src/app/service.ts","webpack:///./src/app/suggestions/suggestions.component.html","webpack:///./src/app/suggestions/suggestions.component.scss","webpack:///./src/app/suggestions/suggestions.component.ts","webpack:///./src/app/textfield/textfield.component.html","webpack:///./src/app/textfield/textfield.component.scss","webpack:///./src/app/textfield/textfield.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\r\nimport {Service} from './service';\r\n\r\nconst SERVER_URL = 'ws://localhost:4568/admin';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n    private webSocket;\r\n    services: Service[] = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public connect() {\r\n        console.log('connecting');\r\n        this.webSocket = new WebSocket(SERVER_URL);\r\n\r\n        this.webSocket.onmessage = (msg => this.fetchServiceList(msg));\r\n    }\r\n\r\n\r\n    private fetchServiceList(msg) {\r\n        const data = JSON.parse(msg.data);\r\n\r\n        this.services.length = 0;\r\n\r\n        data.services.forEach((jsonService, index) => {\r\n            this.services.push(\r\n                new Service(jsonService.id = index, jsonService.service, jsonService.location,\r\n                    jsonService.age, jsonService.gender, jsonService.tags));\r\n        });\r\n    }\r\n\r\n    public updateService(id: number, name: string, value: any) {\r\n\r\n        this.webSocket.send(JSON.stringify({id, name, value}));\r\n\r\n        // if (name === 'name') {\r\n        //     this.webSocket.send(JSON.stringify({id, name, value}));\r\n        //     // this.services[id].name = value;\r\n        // }\r\n        // if (name === 'location') {\r\n        //     // this.services[id].locations = value.split(',');\r\n        // }\r\n        // if (name === 'age') {\r\n        //     // this.services[id].age = value;\r\n        // }\r\n        // if (name === 'gender') {\r\n        //     // this.services[id].gender = value;\r\n        // }\r\n        // if (name === 'tags') {\r\n        //     // this.services[id].tags = value.split(',');\r\n        // }\r\n\r\n        // this.webSocket.send()\r\n        // console.log(JSON.stringify(this.services[id]));\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"adminContainer\\\">\\r\\n    <app-header></app-header>\\r\\n\\r\\n    <h1>Chat Bot Admin Area</h1>\\r\\n\\r\\n\\r\\n    <table class=\\\"services\\\">\\r\\n        <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Locations</th>\\r\\n            <th>Age</th>\\r\\n            <th>Gender</th>\\r\\n            <th>Tags</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let service of adminService.services; let id = index\\\">\\r\\n            <td #nameTD contenteditable=\\\"true\\\" (blur)=\\\"adminService.updateService(id, 'name', nameTD.innerHTML)\\\">{{service.name}}</td>\\r\\n            <td #locationTD contenteditable=\\\"true\\\" (blur)=\\\"adminService.updateService(id, 'location', locationTD.innerHTML)\\\">{{service.locations}}</td>\\r\\n            <td #ageTD contenteditable=\\\"true\\\" (blur)=\\\"adminService.updateService(id, 'age', ageTD.innerHTML)\\\">{{service.age}}</td>\\r\\n            <td #genderTD contenteditable=\\\"true\\\" (blur)=\\\"adminService.updateService(id, 'gender', genderTD.innerHTML)\\\">{{service.gender}}</td>\\r\\n            <td #tagsTD contenteditable=\\\"true\\\" (blur)=\\\"adminService.updateService(id, 'tags', tagsTD.innerHTML)\\\">{{service.tags}}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n\\r\\n    <!--<!-s=\\\"services\\\">&ndash;&gt;-->\\r\\n\\r\\n        <!--<li *ngFor=\\\"let service of services\\\">-->\\r\\n            <!--{{service}}-->\\r\\n        <!--</li>-->\\r\\n\\r\\n    <!--</ul>-->\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"#adminContainer {\\n  height: 100vh;\\n  width: 100vw;\\n  display: flex;\\n  flex-direction: column; }\\n  #adminContainer h1 {\\n    text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Service} from '../service';\r\nimport {AdminService} from '../admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor(public adminService: AdminService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.adminService.connect();\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {ChatComponent} from './chat/chat.component';\r\n\r\nconst routes: Routes = [\r\n    {path: '', redirectTo: '/chat', pathMatch: 'full'},\r\n    {path: 'chat', component: ChatComponent},\r\n    {path: 'admin', component: AdminComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \":root {\\n  width: 100%;\\n  height: 100%; }\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Chatbot';\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {TextfieldComponent} from './textfield/textfield.component';\r\nimport {MessageareaComponent} from './messagearea/messagearea.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {SuggestionsComponent} from './suggestions/suggestions.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {ChatComponent} from './chat/chat.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatTableModule} from '@angular/material';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderComponent,\r\n        TextfieldComponent,\r\n        MessageareaComponent,\r\n        SuggestionsComponent,\r\n        AdminComponent,\r\n        ChatComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        MatTableModule,\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<div id=\\\"chatContainer\\\">\\r\\n    <app-header></app-header>\\r\\n    <app-messagearea></app-messagearea>\\r\\n    <app-textfield></app-textfield>\\r\\n</div>\\r\\n\"","module.exports = \"#chatContainer {\\n  width: 100vw;\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"logo\\\">\\r\\n    <a href=\\\"http://www.health-in-mind.org.uk/\\\"><img src=\\\"../../assets/health-in-mind.png\\\" alt=\\\"Health in Mind\\\"></a>\\r\\n</div>\"","module.exports = \":host {\\n  height: 13%;\\n  width: 100%;\\n  background: #F5A83D;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center; }\\n  :host #logo {\\n    margin-left: 1rem;\\n    height: 95%; }\\n  :host #logo img {\\n      height: 100%;\\n      width: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Message} from './message';\r\n\r\nconst SERVER_URL = 'ws://localhost:4567/chat';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n    public messages: Array<Message> = [];\r\n    private webSocket;\r\n\r\n\r\n    add(message: Message) {\r\n        this.messages.push(message);\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public connect() {\r\n        this.webSocket = new WebSocket(SERVER_URL);\r\n\r\n        this.webSocket.onmessage = (msg => this.updateChat(msg));\r\n    }\r\n\r\n    public updateChat(msg) {\r\n        const data = JSON.parse(msg.data);\r\n        if (data.reply !== undefined) {\r\n            const message: Message = {\r\n                type: 0,\r\n                message: data.reply\r\n            };\r\n\r\n            this.add(message);\r\n        }\r\n    }\r\n\r\n    public send(message: Message) {\r\n        this.add(message);\r\n        this.webSocket.send(message.message);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div #scrollMe id=\\\"messageArea\\\">\\r\\n    <div class=\\\"messageRow\\\" *ngFor=\\\"let message of messageService.messages\\\">\\r\\n\\r\\n        <div *ngIf=\\\"message.type === 0\\\" class=\\\"serverMessage\\\">\\r\\n            <div class=\\\"panda\\\"><img src=\\\"../../assets/panda.png\\\"></div>\\r\\n            <div class=\\\"message\\\">\\r\\n                {{message.message}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"message.type === 1\\\" class=\\\"userMessage\\\">\\r\\n            <div class=\\\"spacer\\\"></div>\\r\\n            <div class=\\\"message\\\">\\r\\n                {{message.message}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  flex-grow: 2;\\n  flex-basis: 0;\\n  min-height: 0; }\\n  :host #messageArea {\\n    display: flex;\\n    flex-direction: column;\\n    height: calc(100% - 2rem);\\n    padding: 1rem;\\n    overflow-y: scroll; }\\n  :host #messageArea .messageRow {\\n      margin-bottom: 1rem; }\\n  :host #messageArea .messageRow .message {\\n        background: #F5A83D;\\n        border-radius: 0.7rem;\\n        padding: 1rem;\\n        color: #ffffff;\\n        font-size: 1.2rem; }\\n  :host #messageArea .messageRow .serverMessage {\\n        display: flex;\\n        flex-direction: row;\\n        width: 45%;\\n        align-items: flex-start; }\\n  :host #messageArea .messageRow .serverMessage .panda img {\\n          height: 6rem;\\n          width: auto; }\\n  :host #messageArea .messageRow .userMessage {\\n        display: flex; }\\n  :host #messageArea .messageRow .userMessage .spacer {\\n          flex-grow: 2; }\\n  :host #messageArea .messageRow .userMessage .message {\\n          max-width: 45%;\\n          overflow-wrap: break-word;\\n          white-space: pre-line; }\\n\"","import {AfterViewChecked, Component, ElementRef, HostListener, OnInit, ViewChild, ViewContainerRef} from '@angular/core';\r\nimport {MessageService} from '../message.service';\r\n\r\n@Component({\r\n    selector: 'app-messagearea',\r\n    templateUrl: './messagearea.component.html',\r\n    styleUrls: ['./messagearea.component.scss']\r\n})\r\nexport class MessageareaComponent implements OnInit, AfterViewChecked {\r\n\r\n    constructor(public  messageService: MessageService) {\r\n    }\r\n\r\n    @ViewChild('scrollMe') private myScrollContainer: ElementRef;\r\n\r\n    ngOnInit() {\r\n        this.messageService.connect();\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom(): void {\r\n        try {\r\n            this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n        } catch (err) { }\r\n    }\r\n\r\n}\r\n","export class Service {\r\n    id: number;\r\n    name: string;\r\n    locations: string[];\r\n    age: string;\r\n    gender: string;\r\n    tags: string[];\r\n\r\n    constructor(id: number, name: string, locations: string[], age: string, gender: string, tags: string[]) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.locations = locations;\r\n        this.age = age;\r\n        this.gender = gender;\r\n        this.tags = tags;\r\n    }\r\n}\r\n","module.exports = \"<p>\\r\\n  suggestions works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-suggestions',\r\n  templateUrl: './suggestions.component.html',\r\n  styleUrls: ['./suggestions.component.scss']\r\n})\r\nexport class SuggestionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"input\\\">\\r\\n    <textarea [(ngModel)]=\\\"textValue\\\" (keydown.enter)=\\\"sendMessage();false\\\" placeholder=\\\"Tell me what's on your mind...\\\"></textarea>\\r\\n</div>\\r\\n\\r\\n<div id=\\\"button\\\" (click)=\\\"sendMessage()\\\">\\r\\n    <i class=\\\"material-icons\\\">\\r\\n        send\\r\\n    </i>\\r\\n</div>\"","module.exports = \":host {\\n  display: flex;\\n  align-items: center;\\n  border-top: solid 0.2rem #F5A83D;\\n  width: 100%;\\n  height: 10%; }\\n  :host #input {\\n    flex-grow: 2;\\n    padding: 0.5rem 1rem;\\n    height: calc(100% - 0.5*2rem); }\\n  :host #input textarea {\\n      font-family: 'Lato', sans-serif;\\n      font-size: 2rem;\\n      outline: none;\\n      border: none;\\n      padding: 0;\\n      width: 100%;\\n      height: 100%;\\n      resize: none; }\\n  :host #button {\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    cursor: pointer;\\n    margin-right: 1rem;\\n    color: #F5A83D; }\\n  :host #button i {\\n      font-size: 2.5rem; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {MessageService} from '../message.service';\r\nimport {Message} from '../message';\r\n\r\n@Component({\r\n    selector: 'app-textfield',\r\n    templateUrl: './textfield.component.html',\r\n    styleUrls: ['./textfield.component.scss']\r\n})\r\nexport class TextfieldComponent implements OnInit {\r\n\r\n    public textValue = '';\r\n\r\n    constructor(private messageService: MessageService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    sendMessage(): void {\r\n        if (this.textValue.trim() !== '') {\r\n            const message: Message = {\r\n                type: 1,\r\n                message: this.textValue\r\n            };\r\n            this.messageService.send(message);  // TODO: change to message class\r\n        }\r\n        this.textValue = '';\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}